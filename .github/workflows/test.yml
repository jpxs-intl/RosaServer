name: Test
on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  # Debug is used for ASAN/testing builds to avoid disabling assertions
  BUILD_TYPE: Debug

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Pull Packages
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install dpkg-dev libc-dev make liblz4-dev libssl-dev libsqlite3-dev libopus-dev gcc-13 g++-13
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 100 --slave /usr/bin/g++ g++ /usr/bin/g++-13 --slave /usr/bin/gcov gcov /usr/bin/gcov-13
        sudo update-alternatives --set gcc /usr/bin/gcc-13

    - uses: lukka/get-cmake@latest
    - uses: rui314/setup-mold@v1

    - name: Build MoonJIT
      shell: bash
      working-directory: ${{github.workspace}}/moonjit/src
      run: sudo make -j 4 XCFLAGS+="-DLUAJIT_ENABLE_LUA52COMPAT -DLUAJIT_ENABLE_GC64"

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/release

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/release
      run: cmake .. -G "Ninja" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_LINKER_TYPE=MOLD -DCMAKE_CXX_FLAGS:STRING="-fsanitize=address" -DCMAKE_C_FLAGS:STRING="-fsanitize=address"

    - name: Build
      working-directory: ${{github.workspace}}/release
      shell: bash
      run: cmake --build . --config $BUILD_TYPE --parallel 4

    - name: Test
      working-directory: ${{github.workspace}}/test
      shell: bash
      run: ./test