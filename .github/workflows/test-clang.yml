name: Test
on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  # Debug is used for ASAN/testing builds to avoid disabling assertions
  BUILD_TYPE: Debug

jobs:
  test-clang:
    name: Test (clang)
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install LLVM and Clang
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 17
        sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-17 100
        sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-17 100
        sudo update-alternatives --install /usr/bin/cc cc /usr/bin/clang-17 100
        sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-17 100
        sudo update-alternatives --set clang /usr/bin/clang-17
        sudo update-alternatives --set clang++ /usr/bin/clang++-17

    - name: Pull Packages
      run: sudo apt-get install build-essential cmake liblz4-dev libssl-dev libsqlite3-dev libopus-dev

    - name: Build MoonJIT
      shell: bash
      working-directory: ${{github.workspace}}/moonjit/src
      run: sudo make -j 4 XCFLAGS+="-DLUAJIT_ENABLE_LUA52COMPAT -DLUAJIT_ENABLE_GC64"

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/release

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/release
      run: cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_FLAGS:STRING="-fsanitize=address"

    - name: Build
      working-directory: ${{github.workspace}}/release
      shell: bash
      run: cmake --build . --config $BUILD_TYPE --parallel 4

    - name: Test
      working-directory: ${{github.workspace}}/test
      shell: bash
      run: ./test